generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int          @id @default(autoincrement())
  name          String
  email         String       @unique
  password      String
  mobile_number String       @unique
  user_type     UserType     @default(ADMIN)
  username      String       @unique
  business_id   Int
  outlet_id     Int?
  user_outlets  UserOutlet[]
  user_session  UserSession?
  Business      Business     @relation(fields: [business_id], references: [id])
  Outlet        Outlet?      @relation(fields: [outlet_id], references: [id])

  @@map("users")
}

model UserOutlet {
  id          Int    @id @default(autoincrement())
  user_id     Int
  business_id String
  outlet_id   Int
  user        User   @relation(fields: [user_id], references: [id])

  @@map("user_outlets")
}

model Business {
  id                           Int        @id @default(autoincrement())
  contact_person_name          String
  contact_person_email         String
  contact_person_mobile_number String
  company_name                 String
  address                      String
  pin                          Int
  city                         String
  state                        String
  country                      String
  business_type                String
  gst                          String
  pan                          String
  bank_account_number          String
  bank_name                    String
  ifsc_code                    String
  account_type                 String
  account_holder_name          String
  outlets                      Outlet[]
  users                        User[]
  MenuItem                     MenuItem[]
  Category                     Category[]

  @@map("businesses")
}

model Outlet {
  id             Int              @id @default(autoincrement())
  outlet_name    String
  outlet_address String
  outlet_pin     Int
  outlet_city    String
  outlet_state   String
  outlet_country String
  business_id    Int
  business       Business         @relation(fields: [business_id], references: [id])
  users          User[]
  OutletMenuItem OutletMenuItem[]

  @@map("outlets")
}

model UserSession {
  id            Int      @id @default(autoincrement())
  user_id       Int      @unique
  access_token  String
  refresh_token String
  expire_at     DateTime
  created_at    DateTime @default(now())
  user          User     @relation(fields: [user_id], references: [id])

  @@map("user_sessions")
}

enum UserType {
  ADMIN
  USER
}

model Category {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(50)
  description String?
  menu_items  MenuItem[]
  business    Business   @relation(fields: [business_id], references: [id])
  business_id Int

  @@map("categories")
}

model MenuItem {
  id              Int                  @id @default(autoincrement())
  category_id     Int?
  name            String               @db.VarChar(100)
  description     String?              @db.Text
  price           Decimal              @db.Decimal(10, 2)
  is_vegetarian   Boolean              @default(false)
  spice_level     SpiceLevel?
  is_available    Boolean              @default(true)
  is_deleted      Boolean              @default(false)
  category        Category?            @relation(fields: [category_id], references: [id])
  ingredients     MenuItemIngredient[]
  OutletMenuItems OutletMenuItem[]
  business        Business             @relation(fields: [business_id], references: [id])
  business_id     Int

  @@map("menu_items")
}

model Ingredient {
  id                    Int                  @id @default(autoincrement())
  name                  String               @db.VarChar(50)
  unit                  Unit?
  stock_quantity        Int?
  menu_item_ingredients MenuItemIngredient[]

  @@map("ingredients")
}

enum Unit {
  KG
  GRAM
  LITRE
  ML
  PCS
}

model MenuItemIngredient {
  item_id       Int
  ingredient_id Int
  quantity      Decimal    @db.Decimal(10, 2)
  menu_item     MenuItem   @relation(fields: [item_id], references: [id])
  ingredient    Ingredient @relation(fields: [ingredient_id], references: [id])

  @@id([item_id, ingredient_id])
  @@map("menu_item_ingredients")
}

enum SpiceLevel {
  Mild
  Medium
  Hot
  ExtraHot @map("Extra Hot")
}

model OutletMenuItem {
  id           Int      @id @default(autoincrement())
  menu_item    MenuItem @relation(fields: [menu_item_id], references: [id])
  menu_item_id Int
  outlet_id    Int
  outlet       Outlet   @relation(fields: [outlet_id], references: [id])
  price        Decimal  @db.Decimal(10, 2)
  is_available Boolean  @default(true)
}
